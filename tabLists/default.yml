# This is the default configuration file of BungeeTabListPlus.
#
# Since the configuration of the plugin is quite complex you
# might want to have a look at the wiki from time to time.
# 
# Wiki: https://github.com/CodeCrafter47/BungeeTabListPlus/wiki
#  Placeholders: https://github.com/CodeCrafter47/BungeeTabListPlus/wiki/Placeholders
#  Examples: https://github.com/CodeCrafter47/BungeeTabListPlus/wiki/Examples
#

# It is possible to have multiple tab list configuration files.
# BungeeTabListPlus will parse all .yml files it finds in the tabLists directory.
# Which tab list a player sees depends on the showTo and priority options.

# All player see this tab list
showTo: "all"

# Examples of alternative options for showTo:
# showTo: ' ${viewer server} == "Factions" '
# showTo: ' ${viewer server} == "Factions" or ${viewer server} == "Survival" '
# showTo: ' ${viewer vault_primary_group} == "Admin" '

# If after evaluating the showTo option of all tab list configs multiple tab lists
# are visible to a player, he will bw shown the one with the highest priority:
priority: 1

# Tab list header and footer:
showHeaderFooter: true

header:
- '&bWelcome &6${viewer name}'
- '&eW&belcome &6${viewer name}'
- '&eWe&blcome &6${viewer name}'
- '&eWel&bcome &6${viewer name}'
- '&eWelc&bome &6${viewer name}'
- '&eWelco&bme &6${viewer name}'
- '&eWelcom&be &6${viewer name}'
- '&eWelcome &6${viewer name}'
- '&bW&eelcome &6${viewer name}'
- '&bWe&elcome &6${viewer name}'
- '&bWel&ecome &6${viewer name}'
- '&bWelc&eome &6${viewer name}'
- '&bWelco&eme &6${viewer name}'
- '&bWelcom&ee &6${viewer name}'
- '&bWelcome &6${viewer name}'

headerAnimationUpdateInterval: 0.25

footer:
- |-
  &bLionheartMC.net &e&lPlayers In Hub: &b{players:hub} &bLionheartMC.net
  &bJoin our discord: https://discord.gg/BMfPYpT

footerAnimationUpdateInterval: 0.5

# Custom placeholders are a powerful mechanism to add more dynamic content
# to the tab list.
customPlaceholders:
  # Defines the ${afk_tag} placeholder which is used to add "|away"
  # to the players name if he is afk.
  afk_tag:
    !conditional
    condition: ${player essentials_afk}
    true: '&7|&oaway'
    false: ''
  # Defines the ${viewer_colored_ping0} placeholder which displays the ping in green
  # if it is below 50ms, otherwise in yellow.
  viewer_colored_ping0:
    !conditional
    condition: "${viewer ping} < 120"
    true: "&a${viewer ping}"
    false: "&e${viewer ping}"
  # Defines ${the viewer_colored_ping} placeholder which displays the ping in red
  # if it is above 150ms, otherwise it is replaced with the ${viewer_colored_ping0}
  # placeholder ( < 50 -> green, > 50 -> yellow).
  # That results in the following color scheme:
  # 0 - 49   -> green
  # 50 - 149 -> yellow
  # 150+     -> red
  viewer_colored_ping:
    !conditional
    condition: "${viewer ping} < 200"
    true: ${viewer_colored_ping0}
    false: "&c${viewer ping}"

# Player sets are required to display players and player counts on the tab list.
# To display a player count use ${playerset:<name> size}, example: ${playerset:global size}.
playerSets:
  # The global player set contains all players
  global:
    filter: "true"
# # Some more examples. Be careful to get the number of spaces right when using them.
# # Player set containing all players on a specific server:
# survival:
#   filter: |-
#     ${player server} == "survival"
# # Player set containing all players on the same server as the player viewing the tab list:
# currentserver:
#   filter: |-
#     ${player server} == ${viewer server}
# # Player set containing all players on a specific server and world:
# survival_nether:
#   filter: |-
#     ${player server} == "survival"
#     and ${player world} == "world_nether"
# # Player set containing all admins:
# admins:
#   filter: |-
#     ${player vault_primary_group} == "admin"
#     or ${player vault_primary_group} == "owner"

# We want the tab list to have a fixed size of 60 slots.
# If you want a dynamic size you need to set type to DYNAMIC_SIZE
# and you don't need any of the options below it. Have a look at
# the example in the wiki to see which options you need instead:
# https://github.com/CodeCrafter47/BungeeTabListPlus/wiki/Examples#global-tab-list-dynamic-size
type: FIXED_SIZE
size: 60 # 60 slots -> 3 columns, 20 rows

# The defaultIcon and defaultPing will be used for all slots for which no other value is
# explicitely set.
defaultIcon: MHF_question
defaultPing: 0

# Here the content of the tab list is configured:
components:
# Three info slots at the top
- {text: "&bServer: &e${viewer server}", icon: "SKIN=Zdok", ping: 0} # 1st row, 1st column
- {text: "&bPlaytime: &e${viewer bungeeonlinetime_hours}", icon: "SKIN=Ali_Mora", ping: 0} # 1st row, 2nd column
# Show ping in different colors depending on how good/ bad it is
- {text: "&bPing: ${viewer_colored_ping}ms", icon: "default/ping.png", ping: 0} # 1st row, 3rd column
# A row of empty slots below
- {text: "", icon: "colors/dark_gray.png", ping: 0} # 2nd row, 1st column
- {text: ""} # 2nd row, 2nd column; Since icon and ping are the default they don't need to be specified explicitely.
- {} # 2nd row, 3rd column; Since the text is empty it doesn't need to be specified either
# The players by server component adds players to the tab list grouped by server
- !players_by_server
  # The global player set is configured above
  playerSet: global
  # The server header is shown for each server above the players on that server.
  # We use it to display the server name and the player count.
  serverHeader:
  - {text: "&a&n${server}&f&o (${server_player_count}):", icon: "colors/green.png", ping: 0}
  # The server separator is shown between two consecutive servers. 
  # Here it use used to separate the servers with an empty row of slots, showing two more variants to display an empty slot.
  serverSeparator:
  - {}
  - ""
  -
  # Whether empty servers should show up too
  includeEmptyServers: false
  # Format of the player slot. Add prefixes as you like
  playerComponent: "${player vault_prefix}${player name}${afk_tag}"
  # If there isn't enough space for all players the morePlayersComponent is displayed. We use to to display the number of players which couldn't be displayed on the tab list.
  morePlayersComponent: {text: "&7... and &e${other_count} &7others", icon: "colors/gray.png", ping: 0}
# A spacer creates as many empty slots as possible.
- !spacer {}
# Because the spacer has eaten up all the remaining free slots, the nine slots below are guaranteed to be at the bottom of the tab list.
# Let's start with another empty row
# 18th row, 1st column
# 18th row, 2nd column
# 18th row, 3rd column
# Then some nice animations at the bottom
- !animated # 19th row, 1st column
  interval: 0.2
  components:
  - {text: "&6&e=&b==============", icon: "colors/gold.png", ping: 0}
  - {text: "&6=&e=&b=============", icon: "colors/gold.png", ping: 0}
  - {text: "&6==&e=&b============", icon: "colors/gold.png", ping: 0}
  - {text: "&6===&e=&b===========", icon: "colors/gold.png", ping: 0}
  - {text: "&6====&e=&b==========", icon: "colors/gold.png", ping: 0}
  - {text: "&6=====&e=&b=========", icon: "colors/gold.png", ping: 0}
  - {text: "&6======&e=&b========", icon: "colors/gold.png", ping: 0}
  - {text: "&6=======&e=&b=======", icon: "colors/gold.png", ping: 0}
  - {text: "&6========&e=&b======", icon: "colors/gold.png", ping: 0}
  - {text: "&6=========&e=&b=====", icon: "colors/gold.png", ping: 0}
  - {text: "&6==========&e=&b====", icon: "colors/gold.png", ping: 0}
  - {text: "&6===========&e=&b===", icon: "colors/gold.png", ping: 0}
  - {text: "&6============&e=&b==", icon: "colors/gold.png", ping: 0}
  - {text: "&6=============&e=&b=", icon: "colors/gold.png", ping: 0}
  - {text: "&6==============&e=&b", icon: "colors/gold.png", ping: 0}
- !animated # 19th row, 2nd column
  interval: 0.2
  components:
  - {text: "&b&e=&b==============", icon: "colors/gold.png", ping: 0}
  - {text: "&b=&e=&b=============", icon: "colors/gold.png", ping: 0}
  - {text: "&b==&e=&b============", icon: "colors/gold.png", ping: 0}
  - {text: "&b===&e=&b===========", icon: "colors/gold.png", ping: 0}
  - {text: "&b====&e=&b==========", icon: "colors/gold.png", ping: 0}
  - {text: "&b=====&e=&b=========", icon: "colors/gold.png", ping: 0}
  - {text: "&b======&e=&b========", icon: "colors/gold.png", ping: 0}
  - {text: "&b=======&e=&b=======", icon: "colors/gold.png", ping: 0}
  - {text: "&b========&e=&b======", icon: "colors/gold.png", ping: 0}
  - {text: "&b=========&e=&b=====", icon: "colors/gold.png", ping: 0}
  - {text: "&b==========&e=&b====", icon: "colors/gold.png", ping: 0}
  - {text: "&b===========&e=&b===", icon: "colors/gold.png", ping: 0}
  - {text: "&b============&e=&b==", icon: "colors/gold.png", ping: 0}
  - {text: "&b=============&e=&b=", icon: "colors/gold.png", ping: 0}
  - {text: "&b==============&e=&b", icon: "colors/gold.png", ping: 0}
- !animated # 19th row, 3rd column
  interval: 0.2
  components:
  - {text: "&b&e=&b==============", icon: "colors/gold.png", ping: 0}
  - {text: "&b=&e=&b=============", icon: "colors/gold.png", ping: 0}
  - {text: "&b==&e=&b============", icon: "colors/gold.png", ping: 0}
  - {text: "&b===&e=&b===========", icon: "colors/gold.png", ping: 0}
  - {text: "&b====&e=&b==========", icon: "colors/gold.png", ping: 0}
  - {text: "&b=====&e=&b=========", icon: "colors/gold.png", ping: 0}
  - {text: "&b======&e=&b========", icon: "colors/gold.png", ping: 0}
  - {text: "&b=======&e=&b=======", icon: "colors/gold.png", ping: 0}
  - {text: "&b========&e=&b======", icon: "colors/gold.png", ping: 0}
  - {text: "&b=========&e=&b=====", icon: "colors/gold.png", ping: 0}
  - {text: "&b==========&e=&b====", icon: "colors/gold.png", ping: 0}
  - {text: "&b===========&e=&b===", icon: "colors/gold.png", ping: 0}
  - {text: "&b============&e=&b==", icon: "colors/gold.png", ping: 0}
  - {text: "&b=============&e=&b=", icon: "colors/gold.png", ping: 0}
  - {text: "&b==============&e=&b", icon: "colors/gold.png", ping: 0}
- {text: "&bZ: &e${viewer location_x}", icon: "SKIN=Katsuki_Shouta", ping: 0}
- {text: "&bY: &e${viewer location_y}", icon: "SKIN=Dustehhh", ping: 0}
- {text: "&bX: &e${viewer location_z}", icon: "SKIN=SuperLinkNL", ping: 0}
- {text: "&bTime: &e${time H:mm:ss}", icon: "SKIN=CavemanlyMan", ping: 0} # 20th row, 1st column
- {text: "&bPlayers: &e${playerset:global size}", icon: "SKIN=_Syntax_Error", ping: 0} # 20th row, 2nd column
- {text: "&bBalance: &e${viewer vault_balance 1.2}", icon: "SKIN=LadyKaviir", ping: 0} # 20th row, 3rd column
